{"version":3,"sources":["components/navbar.js","components/vizbox.js","components/vizcolumn.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","handleSelectChange","e","setState","selectedSort","target","value","state","sortingMethods","bubble","bubbleSort","addColumn","bind","clearContent","this","columnArr","push","boxes","updateColumnArr","className","onClick","name","id","onChange","disabled","React","Component","VizBox","active","VizColumn","boxArr","column","addColumnBox","subtractColumnBox","removeIndividualColumn","nextProps","length","onAddBox","index","splice","icon","faTimes","map","item","key","style","display","flexDirection","alignItems","justifyContent","library","add","faArrowLeft","faArrowRight","App","sortedColumnArr","history","historyTracker","handleAddColumn","incrementHistory","decrementHistory","goToStart","goToEnd","clearSortedContent","colIndex","boxAmount","cols","colItem","len","prevHistory","i","j","tmp","updateBoxArr","handleAddBox","col","fontWeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6460003.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/navbar.css'\r\n\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            selectedSort: '',\r\n            sortingMethods: {\r\n                bubble: this.props.bubbleSort\r\n            }\r\n        } \r\n        this.addColumn = this.addColumn.bind(this);\r\n        this.bubbleSort = this.bubbleSort.bind(this);\r\n        this.clearContent = this.clearContent.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    }\r\n\r\n    addColumn(e){\r\n        this.props.columnArr.push({boxes: [1]});\r\n        this.props.updateColumnArr(this.props.columnArr);\r\n    }\r\n\r\n    bubbleSort(e){\r\n        this.props.bubbleSort();\r\n    }\r\n\r\n    clearContent(){\r\n        this.props.clearContent();\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            selectedSort: e.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"algo-navbar\">\r\n                <button className=\"algo-navbar-button\" onClick={this.clearContent}>Clear</button>\r\n                <button className=\"algo-navbar-button\" onClick={this.addColumn}>Add Column</button>\r\n                <select name=\"sorts\" id=\"sort-select\" className=\"algo-navbar-select\" onChange={this.handleSelectChange}>\r\n                    <option value=\"\">Choose a sorting method</option>\r\n                    <option value=\"bubble\">Bubble</option>\r\n                </select>\r\n                <button className=\"algo-navbar-button\" disabled={!this.state.selectedSort} onClick={this.state.sortingMethods[this.state.selectedSort]}>Sort!</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nclass VizBox extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.active ? \"algo-viz-square active-square\" : \"algo-viz-square\"}></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VizBox;","import React from 'react';\r\nimport VizBox from './vizbox';\r\nimport '../styles/columns.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass VizColumn extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            boxArr: props.column.boxes\r\n        }\r\n        \r\n        this.addColumnBox = this.addColumnBox.bind(this);\r\n        this.subtractColumnBox = this.subtractColumnBox.bind(this);\r\n        this.removeIndividualColumn = this.removeIndividualColumn.bind(this);\r\n    }\r\n\r\n    //TODO: Really need to get these working in order to avoid UNSAFE_componentWillReceiveProps\r\n    // componentDidUpdate(prevProps, prevState){\r\n    //     if(prevState.boxArr !== this.state.boxArr){\r\n    //         let boxArr = this.state.boxArr;\r\n    //         this.setState({boxArr});\r\n    //     }\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     console.log(`TCL: VizColumn -> getDerivedStateFromProps -> state`, state)\r\n    //     console.log(`TCL: VizColumn -> getDerivedStateFromProps -> props`, props)\r\n    //     if(props.boxArr !== state.boxArr){\r\n    //         let boxArr = state.boxArr;\r\n    //         return {boxArr: props.boxArr}\r\n    //     } else return null;\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ boxArr: nextProps.column.boxes });  \r\n    }\r\n    \r\n    addColumnBox(){\r\n        this.state.boxArr.push(this.state.boxArr.length + 1);\r\n        this.setState({\r\n            boxArr: this.state.boxArr\r\n        });\r\n        this.props.onAddBox(this.props.index, this.state.boxArr);\r\n    }\r\n\r\n    subtractColumnBox(){\r\n        this.state.boxArr.splice(this.state.boxArr.length - 1, 1);\r\n        this.setState({\r\n            boxArr: this.state.boxArr\r\n        });\r\n    }\r\n\r\n    removeIndividualColumn(){\r\n        this.props.removeIndividualColumn(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"algo-viz-column-container\">\r\n                <button className=\"algo-column-button\" onClick={this.removeIndividualColumn}>\r\n                    <FontAwesomeIcon className=\"button-icon\" icon={faTimes}></FontAwesomeIcon>\r\n                </button>\r\n                <div className={this.props.active ? \"algo-viz-column active-column\" : \"algo-viz-column\"}>\r\n                {/* <div className=\"algo-viz-column\"> */}\r\n                    {this.state.boxArr.map(item => {\r\n                        return (\r\n                            <VizBox key={item} active={this.props.active}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div style={{\r\n                    display: `flex`,\r\n                    flexDirection: `row`,\r\n                    alignItems: `center`,\r\n                    justifyContent: `center`\r\n                }}>\r\n                    <button className=\"algo-column-button button-icon\" onClick={this.addColumnBox}>+</button>\r\n                    <button className=\"algo-column-button button-icon\" onClick={this.subtractColumnBox}>-</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VizColumn;","import React from 'react';\r\nimport Navbar from './components/navbar';\r\nimport VizColumn from './components/vizcolumn';\r\nimport './styles/App.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faArrowLeft, faArrowRight);\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      columnArr: [],\r\n      sortedColumnArr: []\r\n    }\r\n\r\n    this.history = [];\r\n    this.historyTracker = 0;\r\n\r\n    this.onAddBox = this.onAddBox.bind(this);\r\n    this.handleAddColumn = this.handleAddColumn.bind(this);\r\n    this.bubbleSort = this.bubbleSort.bind(this);\r\n    this.incrementHistory = this.incrementHistory.bind(this);\r\n    this.decrementHistory = this.decrementHistory.bind(this);\r\n    this.clearContent = this.clearContent.bind(this);\r\n    this.goToStart = this.goToStart.bind(this);\r\n    this.goToEnd = this.goToEnd.bind(this);\r\n    this.removeIndividualColumn = this.removeIndividualColumn.bind(this);\r\n    this.clearSortedContent = this.clearSortedContent.bind(this);\r\n  }\r\n\r\n  onAddBox(colIndex, boxAmount) {\r\n    let cols = [...this.state.columnArr];\r\n    let colItem = {...cols[colIndex]};\r\n\r\n    colItem.boxes = boxAmount;\r\n\r\n    cols[colIndex] = colItem;\r\n\r\n    if(this.state.sortedColumnArr.length > 0) {\r\n      this.clearSortedContent();\r\n    }\r\n\r\n    this.setState({\r\n      columnArr: cols\r\n    });\r\n  }\r\n\r\n  handleAddColumn(columnArr) {\r\n    this.setState({\r\n      columnArr: columnArr\r\n    });\r\n  }\r\n\r\n  bubbleSort(){\r\n    let cols = [...this.state.columnArr];\r\n    let len = cols.length;\r\n    let prevHistory = [...this.history];\r\n    this.history = [];\r\n    this.history.push([...cols]);\r\n    for(let i = 0; i < len - 1; i++){\r\n      for(let j = 0; j < len - 1; j++){\r\n        if(cols[j].boxes.length > cols[j + 1].boxes.length) {\r\n          let tmp = cols[j];\r\n          cols[j] = cols[j + 1];\r\n          cols[j + 1] = tmp;\r\n          this.history.push([...cols]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(prevHistory.length === 0){\r\n      this.historyTracker = this.history.length - 1;\r\n    }\r\n\r\n    this.goToEnd();\r\n  }\r\n\r\n  incrementHistory(){\r\n    this.historyTracker++;\r\n    this.setState({\r\n      sortedColumnArr: [...this.history[this.historyTracker]]\r\n    });\r\n  }\r\n\r\n  goToEnd(){\r\n    this.historyTracker = this.history.length - 1;\r\n    this.setState({\r\n      sortedColumnArr: this.history[this.historyTracker]\r\n    });\r\n  }\r\n\r\n  decrementHistory(){\r\n    this.historyTracker--;\r\n    this.setState({\r\n      sortedColumnArr: this.history[this.historyTracker]\r\n    });\r\n  }\r\n\r\n  goToStart(){\r\n    this.historyTracker = 0;\r\n    this.setState({\r\n      sortedColumnArr: this.history[this.historyTracker]\r\n    });\r\n  }\r\n\r\n  clearContent(){\r\n    this.setState({\r\n      columnArr: [],\r\n      sortedColumnArr: []\r\n    });\r\n    this.history = [];\r\n    this.historyTracker = 0;\r\n  }\r\n\r\n  clearSortedContent(){\r\n    this.setState({\r\n      sortedColumnArr: []\r\n    });\r\n    this.history = [];\r\n    this.historyTracker = 0;\r\n  }\r\n\r\n  removeIndividualColumn(index){\r\n    let cols = [...this.state.columnArr];\r\n    cols.splice(index, 1);\r\n    this.setState({\r\n      columnArr: cols\r\n    });\r\n  }\r\n\r\n  render () {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar updateColumnArr={this.handleAddColumn} updateBoxArr={this.handleAddBox} boxArr={this.state.boxArr} columnArr={this.state.columnArr} bubbleSort={this.bubbleSort} clearContent={this.clearContent}/>\r\n        <div className=\"algo-viz-content\">\r\n          <div className=\"algo-viz-content-unsorted\">\r\n            {this.state.columnArr.map((col, index) => {\r\n              return (\r\n                <VizColumn key={index} index={index} column={this.state.columnArr[index]} onAddBox={this.onAddBox} removeIndividualColumn={this.removeIndividualColumn}/>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"algo-viz-content-sorted\">\r\n            <div className=\"sorted-columns\">\r\n              {this.state.sortedColumnArr.map((col, index) => {\r\n                return (\r\n                  <VizColumn key={index + 'sorted'} index={index} column={this.state.sortedColumnArr[index]} active={this.history[this.historyTracker][index].active}/>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"algo-history-buttons\">\r\n              <button className=\"history-button\" style={{fontWeight: `bold`}} disabled={this.historyTracker === 0} onClick={this.goToStart}>START</button>\r\n              <button className=\"history-button\" disabled={this.historyTracker === 0} onClick={this.decrementHistory}><FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon></button>\r\n              <button className=\"history-button\" disabled={this.historyTracker === this.history.length - 1 || this.history.length === 0} onClick={this.incrementHistory}><FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></button>\r\n              <button className=\"history-button\" style={{fontWeight: `bold`}} disabled={this.historyTracker === this.history.length - 1 || this.history.length === 0} onClick={this.goToEnd}>END</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}