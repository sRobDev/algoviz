{"version":3,"sources":["components/navbar.js","components/vizbox.js","components/vizcolumn.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","addBox","bind","subtractBox","addColumn","bubbleSort","clearContent","e","this","boxArr","push","length","updateBoxArr","splice","columnArr","boxes","updateColumnArr","className","onClick","React","Component","VizBox","VizColumn","state","column","addColumnBox","subtractColumnBox","removeIndividualColumn","nextProps","setState","onAddBox","index","icon","faTimes","map","item","key","style","display","flexDirection","alignItems","justifyContent","library","add","faArrowLeft","faArrowRight","App","sortedColumnArr","history","historyTracker","handleAddColumn","switchColumns","incrementHistory","decrementHistory","goToStart","goToEnd","colIndex","boxAmount","cols","colItem","len","i","j","tmp","col1","col2","temp1","temp2","colHolder","handleAddBox","col","fontWeight","disabled","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16677177.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/navbar.css'\r\n\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.addBox = this.addBox.bind(this);\r\n        this.subtractBox = this.subtractBox.bind(this);\r\n        this.addColumn = this.addColumn.bind(this);\r\n        this.bubbleSort = this.bubbleSort.bind(this);\r\n        this.clearContent = this.clearContent.bind(this);\r\n    }\r\n\r\n    addBox(e){\r\n        this.props.boxArr.push(this.props.boxArr.length);\r\n        this.props.updateBoxArr(this.props.boxArr);\r\n    }\r\n\r\n    subtractBox(e){\r\n        this.props.boxArr.splice(this.props.boxArr.length - 1, 1);\r\n        this.props.updateBoxArr(this.props.boxArr);\r\n    }\r\n\r\n    addColumn(e){\r\n        this.props.columnArr.push({boxes: [1]});\r\n        this.props.updateColumnArr(this.props.columnArr);\r\n    }\r\n\r\n    bubbleSort(e){\r\n        this.props.bubbleSort();\r\n    }\r\n\r\n    clearContent(){\r\n        this.props.clearContent();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"algo-navbar\">\r\n                <button className=\"algo-navbar-button\" onClick={this.clearContent}>Clear</button>\r\n                <button className=\"algo-navbar-button\" onClick={this.addColumn}>Add Column</button>\r\n                <button className=\"algo-navbar-button\" onClick={this.bubbleSort}>Bubble Sort</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nclass VizBox extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"algo-viz-square\"></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VizBox;","import React from 'react';\r\nimport VizBox from './vizbox';\r\nimport '../styles/columns.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass VizColumn extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            boxArr: props.column.boxes\r\n        }\r\n\r\n        this.addColumnBox = this.addColumnBox.bind(this);\r\n        this.subtractColumnBox = this.subtractColumnBox.bind(this);\r\n        this.removeIndividualColumn = this.removeIndividualColumn.bind(this);\r\n    }\r\n\r\n    //TODO: Really need to get these working in order to avoid UNSAFE_componentWillReceiveProps\r\n    // componentDidUpdate(prevProps, prevState){\r\n    //     if(prevState.boxArr !== this.state.boxArr){\r\n    //         let boxArr = this.state.boxArr;\r\n    //         this.setState({boxArr});\r\n    //     }\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //     console.log(`TCL: VizColumn -> getDerivedStateFromProps -> state`, state)\r\n    //     console.log(`TCL: VizColumn -> getDerivedStateFromProps -> props`, props)\r\n    //     if(props.boxArr !== state.boxArr){\r\n    //         let boxArr = state.boxArr;\r\n    //         return {boxArr: props.boxArr}\r\n    //     } else return null;\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ boxArr: nextProps.column.boxes });  \r\n    }\r\n    \r\n    addColumnBox(){\r\n        this.state.boxArr.push(this.state.boxArr.length + 1);\r\n        this.setState({\r\n            boxArr: this.state.boxArr\r\n        });\r\n        this.props.onAddBox(this.props.index, this.state.boxArr);\r\n    }\r\n\r\n    subtractColumnBox(){\r\n        this.state.boxArr.splice(this.state.boxArr.length - 1, 1);\r\n        this.setState({\r\n            boxArr: this.state.boxArr\r\n        });\r\n    }\r\n\r\n    removeIndividualColumn(){\r\n        this.props.removeIndividualColumn(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"algo-viz-column-container\">\r\n                <button className=\"algo-column-button\" onClick={this.removeIndividualColumn}>\r\n                    <FontAwesomeIcon className=\"button-icon\" icon={faTimes}></FontAwesomeIcon>\r\n                </button>\r\n                <div className=\"algo-viz-column\">\r\n                    {this.state.boxArr.map(item => {\r\n                        return (\r\n                            <VizBox key={item}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div style={{\r\n                    display: `flex`,\r\n                    flexDirection: `row`,\r\n                    alignItems: `center`,\r\n                    justifyContent: `center`\r\n                }}>\r\n                    <button className=\"algo-column-button button-icon\" onClick={this.addColumnBox}>+</button>\r\n                    <button className=\"algo-column-button button-icon\" onClick={this.subtractColumnBox}>-</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VizColumn;","import React from 'react';\nimport Navbar from './components/navbar';\nimport VizColumn from './components/vizcolumn';\nimport './styles/App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faArrowLeft, faArrowRight);\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      columnArr: [],\n      sortedColumnArr: []\n    }\n\n    this.history = [];\n    this.historyTracker = 0;\n\n    this.onAddBox = this.onAddBox.bind(this);\n    this.handleAddColumn = this.handleAddColumn.bind(this);\n    this.bubbleSort = this.bubbleSort.bind(this);\n    this.switchColumns = this.switchColumns.bind(this);\n    this.incrementHistory = this.incrementHistory.bind(this);\n    this.decrementHistory = this.decrementHistory.bind(this);\n    this.clearContent = this.clearContent.bind(this);\n    this.goToStart = this.goToStart.bind(this);\n    this.goToEnd = this.goToEnd.bind(this);\n    this.removeIndividualColumn = this.removeIndividualColumn.bind(this);\n  }\n\n  onAddBox(colIndex, boxAmount) {\n    let cols = [...this.state.columnArr];\n    let colItem = {...cols[colIndex]};\n\n    colItem.boxes = boxAmount;\n\n    cols[colIndex] = colItem;\n\n    this.setState({\n      columnArr: cols\n    });\n  }\n\n  handleAddColumn(columnArr) {\n    this.setState({\n      columnArr: columnArr\n    });\n  }\n\n  bubbleSort(){\n    let cols = [...this.state.columnArr];\n    let len = cols.length;\n    this.history = [];\n    this.history.push([...cols]);\n    for(let i = 0; i < len - 1; i++){\n      for(let j = 0; j < len - 1; j++){\n        if(cols[j].boxes.length > cols[j + 1].boxes.length) {\n          let tmp = cols[j];\n          cols[j] = cols[j + 1];\n          cols[j + 1] = tmp;\n          this.history.push([...cols]);\n        }\n      }\n    }\n\n    this.historyTracker = this.history.length - 1;\n    this.setState({\n      sortedColumnArr: [...cols]\n    });\n  }\n\n  switchColumns(col1, col2){\n    let cols = [...this.state.columnArr];\n    let temp1 = cols[col1];\n    let temp2 = cols[col2];\n    let colHolder = temp1;\n    \n    temp1 = temp2;\n    temp2 = colHolder;\n\n    cols[col1] = temp1;\n    cols[col2] = temp2;\n\n    this.setState({\n      columnArr: cols\n    });\n  }\n\n  incrementHistory(){\n    this.historyTracker++;\n    this.setState({\n      sortedColumnArr: this.history[this.historyTracker]\n    });\n  }\n\n  goToEnd(){\n    this.historyTracker = this.history.length - 1;\n    this.setState({\n      sortedColumnArr: this.history[this.historyTracker]\n    });\n  }\n\n  decrementHistory(){\n    this.historyTracker--;\n    this.setState({\n      sortedColumnArr: this.history[this.historyTracker]\n    });\n  }\n\n  goToStart(){\n    this.historyTracker = 0;\n    this.setState({\n      sortedColumnArr: this.history[this.historyTracker]\n    });\n  }\n\n  clearContent(){\n    this.setState({\n      columnArr: [],\n      sortedColumnArr: []\n    });\n    this.history = [];\n    this.historyTracker = 0;\n  }\n\n  removeIndividualColumn(index){\n    let cols = [...this.state.columnArr];\n    cols.splice(index, 1);\n    this.setState({\n      columnArr: cols\n    });\n  }\n\n  render () {\n    \n    return (\n      <div className=\"App\">\n        <Navbar updateColumnArr={this.handleAddColumn} updateBoxArr={this.handleAddBox} boxArr={this.state.boxArr} columnArr={this.state.columnArr} bubbleSort={this.bubbleSort} clearContent={this.clearContent}/>\n        <div className=\"algo-viz-content\">\n          <div className=\"algo-viz-content-unsorted\">\n            {this.state.columnArr.map((col, index) => {\n              return (\n                <VizColumn key={index} index={index} column={this.state.columnArr[index]} onAddBox={this.onAddBox} removeIndividualColumn={this.removeIndividualColumn}/>\n              );\n            })}\n          </div>\n          <div className=\"algo-viz-content-sorted\">\n            <div className=\"sorted-columns\">\n              {this.state.sortedColumnArr.map((col, index) => {\n                return (\n                  <VizColumn key={index + 'sorted'} index={index} column={this.state.sortedColumnArr[index]}/>\n                );\n              })}\n            </div>\n            <div className=\"algo-history-buttons\">\n              <button className=\"history-button\" style={{fontWeight: `bold`}} disabled={this.historyTracker === 0} onClick={this.goToStart}>START</button>\n              <button className=\"history-button\" disabled={this.historyTracker === 0} onClick={this.decrementHistory}><FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon></button>\n              <button className=\"history-button\" disabled={this.historyTracker === this.history.length - 1 || this.history.length === 0} onClick={this.incrementHistory}><FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></button>\n              <button className=\"history-button\" style={{fontWeight: `bold`}} disabled={this.historyTracker === this.history.length - 1 || this.history.length === 0} onClick={this.goToEnd}>END</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}